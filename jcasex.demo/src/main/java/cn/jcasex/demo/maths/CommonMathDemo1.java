package cn.jcasex.demo.maths;

/**
 *
 * @version $Id: CommonMathDemo1.java, v 0.1 2020年02月05日 19:54 bobo.wu Exp $
 */
public class CommonMathDemo1 {

    public static void main(String[] args) {
        /**
         *  1、<< : 左移运算符:符号位不变，高位溢出，低位补0,对补码进行操作
         *  2、十进制--> 二进制补码 --->操作补码 --> 将补码取补码 -->十进制
         *  3、过程(二进制)：
         *    a、6 的二进制补码（32位）:00000000 00000000 00000000 00000110;
         *    b、向左偏移两位后补码：00000000 00000000 00000000 00011000;
         *    c、补码-->补码-->十进制：24
         *  4、打印结果为： 24
         */
        System.out.println("6 << 2 ===== " + (6 << 2));

        /**
         *  1、<< : 左移运算符: 符号位不变，高位溢出，低位补0,对补码进行操作
         *  2、十进制--> 二进制补码 --->操作补码 --> 将补码取补码 -->十进制
         *  3、过程(二进制)：
         *    a、6 的二进制补码（32位）:11111111 11111111 11111111 11111010;
         *    b、向左偏移两位：11111111 11111111 11111111 11101000;
         *    c、补码-->补码-->十进制：-24
         *  4、打印结果为： -24
         */
        System.out.println("-6 << 2 ===== " +(-6 << 2));

        /**
         *  1、>> : 右移运算符: 符号位不变，低位溢出，高位用符号位补高位,对补码进行操作
         *  2、十进制--> 二进制补码 --->操作补码 --> 将补码取补码 -->十进制
         *  3、过程(二进制)：
         *    a、6 的二进制补码（32位）:00000000 00000000 00000000 00000110;
         *    b、向左偏移两位：00000000 00000000 00000000 00000001;
         *    c、补码-->补码-->十进制：1
         *  4、打印结果为：1
         */
        System.out.println("6 >> 2 ===== " +(6 >> 2));

        /**
         *  1、>> : 右移运算符: 符号位不变，低位溢出，高位用符号位补高位,对补码进行操作
         *  2、十进制--> 二进制补码 --->操作补码 --> 将补码取补码 -->十进制
         *  3、过程(二进制)：
         *    a、-6 的二进制补码（32位）:11111111 11111111 11111111 11111010;
         *    b、向左偏移两位：11111111 11111111 11111111 11111110;
         *    c、补码-->补码-->十进制：-2
         *  4、打印结果为：-2
         */
        System.out.println("-6 >> 2 ===== " +(-6 >> 2));

        /**
         *  1、>>> : 无符号右移(无符号的意思是将符号位当作数字位看待): 低位溢出，高位补0,对补码进行操作
         *  2、十进制--> 二进制补码 --->操作补码 --> 十进制
         *  3、过程(二进制)：
         *    a、6 的二进制补码（32位）:00000000 00000000 00000000 00000110;
         *    b、向左偏移两位：00000000 00000000 00000000 00000001;
         *    c、补码-->十进制：1
         *  4、打印结果为：1
         */
        System.out.println("6 >>> 2 ===== " +(6 >>> 2));

        /**
         *  1、>>> : 无符号右移(无符号的意思是将符号位当作数字位看待): 低位溢出，高位补0,对补码进行操作
         *  2、十进制--> 二进制补码 --->操作补码 -->十进制
         *  3、过程(二进制)：
         *     a、-6 的二进制补码（32位）:11111111 11111111 11111111 11111010;
         *    b、向左偏移28位：00000000 00000000 00000000 00001111;
         *    c、补码-->十进制：15
         *  4、打印结果为：15
         */
        System.out.println("-6 >>> 28 ===== " +(-6 >>> 28));
    }

}